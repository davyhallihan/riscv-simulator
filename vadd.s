main: 
    11111111000000010000000100010011; addi sp, sp, -16
    00000000000100010010011000100011; sw ra, 12(sp)
    00000000100000010010010000100011; sw s0, 8(sp)
    00000001000000010000010000010011; addi s0, sp, 16 ; Load Parameters
    00000000000001000010000010000011; lw x1, 0(s0) ; x1 = a
    00000000010001000010000100000011; lw x2, 4(s0) ; x2 = b
    00000000100001000010000110000011; lw x3, 8(s0) ; x3 = c
    00010000000000000000001000010011; addi x4, x0, 256 ; x4 = 256
    00000000000000000000001010010011; addi x5, x0, 0 ; index = 0 ; Initialize index
loop:
    00000010010000101101000001100011; bge x5, x4, end (immediate 32) ; If index >= n leave
    00000000001000101001001100010011; slli x6, x5, 2 ; x6 = index * 4
    00000000000000001010001110000011; lw x7, 0(x1, x6) ; x7 = a[index]
    00000000000000010010010000000011; lw x8, 0(x2, x6) ; x8 = b[index]
    00000000100000111000001110110011; add x7, x7, x8   ; x7 = a[index] + b[index]
    00000000011100011010000000100011; sw x7, 0(x3, x6)
    00000000000100101000001010010011; addi x5, x5, 1
    11111110010111111111000001101111; jal x0, loop (immediate -28)
end:
    00000000110000010010000010000011; lw ra, 12(sp)
    00000000100000010010010000000011; lw s0, 8(sp)
    00000001000000010000000100010011; addi sp, sp, 16
    00000000000000001000000001100111; jalr x0, 0(ra) ; Equivalent to ret