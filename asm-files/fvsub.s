main: 
    00000000010000000000000010110111; lui x1, x0, 1024 ; x1 = 1024 ; x1 = a
    00000000100000000000000100110111; lui x2, x0, 2048 ; x2 = 2048 ; x2 = b
    00000001000000000000000110110111; lui x3, x0, 3072 ; x3 = 3072 ; x3 = d
    00001111111100000000001000010011; addi x4, x0, 256 ; x4 = 256
    00000000000000000000001010010011; addi x5, x0, 0 ; index = 0 ; Initialize index
loop:
    00000100010000101101010001100011; bge x5, x4, end (immediate 76) ; If index >= n leave
    00000000001000101001001100010011; slli x6, x5, 2 ; x6 = index * 4
    00000000011000001000001100110011; add x6, x1, x6 ; make x6 base address of a + index
    00000000000000110010001110000111; flw f7, 0(x6) ; x7 = a[index]
    00000000001000101001001100010011; slli x6, x5, 2 ; x6 = index * 4
    00000000011000010000001100110011; add x6, x2, x6 ; make x6 base address of b + index
    00000000000000110010010000000111; flw f8, 0(x6) ; x8 = b[index]
    00001000100000111111001111010011; fsub.s f7, f7, f8   ; x7 = a[index] - b[index]
    00000000001000101001001100010011; slli x6, x5, 2 ; x6 = index * 4
    00000000011000011000001100110011; add x6, x3, x6 ; make x6 base address of c + index
    00000000011100110010000000100111; fsw f7, 0(x6)
    00000000000100101000001010010011; addi x5, x5, 1
    11111100110111111111000001101111; jal x0, loop (immediate -52)
end:
    00000000000000001000000001100111; jalr x0, 0(ra) ; Equivalent to ret